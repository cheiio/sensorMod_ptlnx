#include "butter.hpp"

butter::butter(__real *x, _real *y, _real a, _real b, uint32_t dt){
	this->my_x = x;
	this->my_y = y;

	this->a0 = a;
	this->b01 = b;

	this->y_ant = 0;

	this->SampleTime = dt;
	this->lastTime = millis();
}

bool butter::Filter(){
	uint64_t now = millis();
	uint64_t timeChange = (now - lastTime);
	if (timeChange >= my_SampleTime) {

		my_y = my_x*b01 + x_ant*b01 - y_ant*a0;

		x_ant = my_x;
		y_ant = my_y;

		lastTime = now;
		return true;
	}else{
		return false;
	}
}
