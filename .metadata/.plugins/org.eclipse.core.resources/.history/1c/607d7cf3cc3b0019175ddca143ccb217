#include <stdio.h>
#include <unistd.h>
#include <stdint.h>
#include <stdlib.h>
#include <fcntl.h>

#include "Impedance_v1.hpp"
#include "KalmanPos_v1.hpp"
#include "butter.hpp"

#include "definitions.h"
#include "xil_uio.hpp"

#define Nmodules 1

//---------------------------- Some Constants definitions ---------------------------------//

const uint32_t n_buff = 32;
const uint32_t dt = 5;              	// Filter Period in uS

const _real pi = 3.1416;
const _real upPos = 60000, lowPos = 22000;
										// 				(pi/2)/(	upPos	-	lowPos	)
const _real RAD_ADC = 4.21e-5;			// rad/ADC -> 	(pi/2)/(	60000 	- 	22000	) (ant 0.0027)
const _real PWM_V = 1023.0/8.0;			// PWM/V ->		(ant 1023/8)
const _real DEG_RAD = 180/pi;

const _real 	M = 0.528404343800586,
				K = 88.6173474407601,
				B = 9.58011226419688,
				P = 0.04,
				outMax = 8,
				outMin = -8;

const _real R = 4e-3;
const _real nQ = 10000;
const _real ab[] = {-0.9450, 0.0275};
const _real cenCurr = 36486.206;

//--------------------------- Some Variables Definition ----------------------------//

// Define Input Variables for filters
_real posIn_f[Nmodules], currIn_f[Nmodules], voltIn_f[Nmodules];

// Define Output Variables for filters
_real pos_filt[Nmodules], vel_filt[Nmodules], curr_filt[Nmodules];

// Define Variables to connect PID controller
_real voltOut[Nmodules];

// Variables to connect Impedance controller
_real imp_sp[Nmodules], impOut[Nmodules];

//////////////////////// Function Definition //////////////////////////

int main()
{
	printf("\n Start PS Only Test \n");

	KalmanPos *kalmanFilt = (KalmanPos *)malloc(KalmanPos *);


	return 0;

}
